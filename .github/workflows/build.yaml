name: github_action_to_ec2

on:
  push:
    branches: [ "INTERN-762" ]

jobs:
  # setup_aws_terraform:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
  #         aws-region: us-east-1

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v2
  #       with:
  #         terraform_wrapper: false
      
  #     - name: Terraform Version
  #       run: echo "Terraform version=$(terraform --version)"

  #     - name: Terraform Init
  #       run: terraform init
  #       working-directory: terraform

  #     - name: Terraform Plan
  #       run: terraform plan 
  #       working-directory: terraform

  #     - name: Terraform Apply
  #       run: terraform apply -auto-approve
  #       working-directory: terraform



  setup_ansible:
    runs-on: ubuntu-latest
    needs: setup_aws_terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Install Python and Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install boto3 botocore ansible

      - name: Configure AWS CLI Profile
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          echo "aws_session_token=${{ secrets.AWS_SESSION_TOKEN }}" >> ~/.aws/credentials

      - name: Ansible graph
        run: ansible-inventory -i aws_ec2.yml --graph
        working-directory: ansible

      - name: Run Ansible Playbook
        run: ansible-playbook -i aws_ec2.yml playbook.yml
        working-directory: ansible
        env:
          ANSIBLE_HOST_KEY_CHECKING: false
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: us-east-1

#comment
#comment2 dsda